on:
    merge_group:
    workflow_call:
    pull_request:
    push:
        branches:
            - main

jobs:
    tests:
        name: Test on stable
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.ref }}-tests
            cancel-in-progress: true
        steps:
            -   uses: actions/checkout@v2
            -   run: cargo test --features integration
                if: github.repository == 'jdrouet/tmdb-api'
                env:
                    TMDB_TOKEN_V3: "${{ secrets.TMDB_TOKEN_V3 }}"
            -   run: cargo test
                if: github.repository != 'jdrouet/tmdb-api'

    check-features:
        name: Ensure all features are building correctly
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.ref }}-check-features
            cancel-in-progress: true
        steps:
            -   uses: taiki-e/install-action@cargo-hack
            -   uses: actions/checkout@v1
            -   run: cargo hack check --tests --feature-powerset

    clippy:
        name: Check clippy suggestions
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.ref }}-clippy
            cancel-in-progress: true
        steps:
            -   uses: actions/checkout@v1
            -   run: rustup component add clippy
            -   name: run code check with clippy
                uses: giraffate/clippy-action@v1
                if: github.event_name == 'pull_request'
                with:
                    clippy_flags: -- -Dwarnings
                    fail_on_error: true
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    reporter: 'github-pr-review'

            -   name: run code check with clippy
                if: github.event_name != 'pull_request'
                run: cargo clippy --tests -- -D warnings

    lint:
        name: Check all linting
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.ref }}-lint
            cancel-in-progress: true
        steps:
            -   uses: actions/checkout@v1
            -   run: cargo fmt --all --check
